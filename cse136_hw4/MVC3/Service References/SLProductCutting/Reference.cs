//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC3.SLProductCutting {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCuttingInfo", Namespace="http://schemas.datacontract.org/2004/07/DomainModel")]
    [System.SerializableAttribute()]
    public partial class ProductCuttingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int product_cutting_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string product_cutting_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int product_cutting_id {
            get {
                return this.product_cutting_idField;
            }
            set {
                if ((this.product_cutting_idField.Equals(value) != true)) {
                    this.product_cutting_idField = value;
                    this.RaisePropertyChanged("product_cutting_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string product_cutting_name {
            get {
                return this.product_cutting_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.product_cutting_nameField, value) != true)) {
                    this.product_cutting_nameField = value;
                    this.RaisePropertyChanged("product_cutting_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SLProductCutting.ISLProductCutting")]
    public interface ISLProductCutting {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLProductCutting/ReadProductCutting", ReplyAction="http://tempuri.org/ISLProductCutting/ReadProductCuttingResponse")]
        MVC3.SLProductCutting.ProductCuttingInfo ReadProductCutting(int id, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLProductCutting/CreateProductCutting", ReplyAction="http://tempuri.org/ISLProductCutting/CreateProductCuttingResponse")]
        int CreateProductCutting(string name, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLProductCutting/UpdateProductCutting", ReplyAction="http://tempuri.org/ISLProductCutting/UpdateProductCuttingResponse")]
        int UpdateProductCutting(int id, string name, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLProductCutting/ReadAllProductCutting", ReplyAction="http://tempuri.org/ISLProductCutting/ReadAllProductCuttingResponse")]
        MVC3.SLProductCutting.ProductCuttingInfo[] ReadAllProductCutting(ref string[] errors);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISLProductCuttingChannel : MVC3.SLProductCutting.ISLProductCutting, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SLProductCuttingClient : System.ServiceModel.ClientBase<MVC3.SLProductCutting.ISLProductCutting>, MVC3.SLProductCutting.ISLProductCutting {
        
        public SLProductCuttingClient() {
        }
        
        public SLProductCuttingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SLProductCuttingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLProductCuttingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLProductCuttingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVC3.SLProductCutting.ProductCuttingInfo ReadProductCutting(int id, ref string[] errors) {
            return base.Channel.ReadProductCutting(id, ref errors);
        }
        
        public int CreateProductCutting(string name, ref string[] errors) {
            return base.Channel.CreateProductCutting(name, ref errors);
        }
        
        public int UpdateProductCutting(int id, string name, ref string[] errors) {
            return base.Channel.UpdateProductCutting(id, name, ref errors);
        }
        
        public MVC3.SLProductCutting.ProductCuttingInfo[] ReadAllProductCutting(ref string[] errors) {
            return base.Channel.ReadAllProductCutting(ref errors);
        }
    }
}
