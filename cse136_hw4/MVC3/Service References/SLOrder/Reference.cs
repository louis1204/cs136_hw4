//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC3.SLOrder {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orders", Namespace="http://schemas.datacontract.org/2004/07/DomainModel")]
    [System.SerializableAttribute()]
    public partial class Orders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char conditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customer_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_createdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float grand_totalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVC3.SLOrder.Order_item[] oilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int order_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float subtotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float tax_totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char condition {
            get {
                return this.conditionField;
            }
            set {
                if ((this.conditionField.Equals(value) != true)) {
                    this.conditionField = value;
                    this.RaisePropertyChanged("condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customer_id {
            get {
                return this.customer_idField;
            }
            set {
                if ((this.customer_idField.Equals(value) != true)) {
                    this.customer_idField = value;
                    this.RaisePropertyChanged("customer_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_created {
            get {
                return this.date_createdField;
            }
            set {
                if ((this.date_createdField.Equals(value) != true)) {
                    this.date_createdField = value;
                    this.RaisePropertyChanged("date_created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float grand_total {
            get {
                return this.grand_totalField;
            }
            set {
                if ((this.grand_totalField.Equals(value) != true)) {
                    this.grand_totalField = value;
                    this.RaisePropertyChanged("grand_total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVC3.SLOrder.Order_item[] oil {
            get {
                return this.oilField;
            }
            set {
                if ((object.ReferenceEquals(this.oilField, value) != true)) {
                    this.oilField = value;
                    this.RaisePropertyChanged("oil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int order_id {
            get {
                return this.order_idField;
            }
            set {
                if ((this.order_idField.Equals(value) != true)) {
                    this.order_idField = value;
                    this.RaisePropertyChanged("order_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float subtotal {
            get {
                return this.subtotalField;
            }
            set {
                if ((this.subtotalField.Equals(value) != true)) {
                    this.subtotalField = value;
                    this.RaisePropertyChanged("subtotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float tax_total {
            get {
                return this.tax_totalField;
            }
            set {
                if ((this.tax_totalField.Equals(value) != true)) {
                    this.tax_totalField = value;
                    this.RaisePropertyChanged("tax_total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order_item", Namespace="http://schemas.datacontract.org/2004/07/DomainModel")]
    [System.SerializableAttribute()]
    public partial class Order_item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char conditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int order_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int product_variation_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float sale_priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float taxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char condition {
            get {
                return this.conditionField;
            }
            set {
                if ((this.conditionField.Equals(value) != true)) {
                    this.conditionField = value;
                    this.RaisePropertyChanged("condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int order_id {
            get {
                return this.order_idField;
            }
            set {
                if ((this.order_idField.Equals(value) != true)) {
                    this.order_idField = value;
                    this.RaisePropertyChanged("order_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int product_variation_id {
            get {
                return this.product_variation_idField;
            }
            set {
                if ((this.product_variation_idField.Equals(value) != true)) {
                    this.product_variation_idField = value;
                    this.RaisePropertyChanged("product_variation_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float sale_price {
            get {
                return this.sale_priceField;
            }
            set {
                if ((this.sale_priceField.Equals(value) != true)) {
                    this.sale_priceField = value;
                    this.RaisePropertyChanged("sale_price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float tax {
            get {
                return this.taxField;
            }
            set {
                if ((this.taxField.Equals(value) != true)) {
                    this.taxField = value;
                    this.RaisePropertyChanged("tax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SLOrder.ISLOrder")]
    public interface ISLOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLOrder/CreateOrder", ReplyAction="http://tempuri.org/ISLOrder/CreateOrderResponse")]
        int CreateOrder(MVC3.SLOrder.Orders order, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLOrder/UpdateOrder", ReplyAction="http://tempuri.org/ISLOrder/UpdateOrderResponse")]
        int UpdateOrder(MVC3.SLOrder.Orders order, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLOrder/DeleteOrder", ReplyAction="http://tempuri.org/ISLOrder/DeleteOrderResponse")]
        int DeleteOrder(int id, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLOrder/ReadOrder", ReplyAction="http://tempuri.org/ISLOrder/ReadOrderResponse")]
        MVC3.SLOrder.Orders ReadOrder(int id, ref string[] errors);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISLOrderChannel : MVC3.SLOrder.ISLOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SLOrderClient : System.ServiceModel.ClientBase<MVC3.SLOrder.ISLOrder>, MVC3.SLOrder.ISLOrder {
        
        public SLOrderClient() {
        }
        
        public SLOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SLOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateOrder(MVC3.SLOrder.Orders order, ref string[] errors) {
            return base.Channel.CreateOrder(order, ref errors);
        }
        
        public int UpdateOrder(MVC3.SLOrder.Orders order, ref string[] errors) {
            return base.Channel.UpdateOrder(order, ref errors);
        }
        
        public int DeleteOrder(int id, ref string[] errors) {
            return base.Channel.DeleteOrder(id, ref errors);
        }
        
        public MVC3.SLOrder.Orders ReadOrder(int id, ref string[] errors) {
            return base.Channel.ReadOrder(id, ref errors);
        }
    }
}
