//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC3.SLCustomer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/DomainModel")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int childrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customer_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string degreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string first_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hobbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int incomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string last_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ownHouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int zipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.address1Field, value) != true)) {
                    this.address1Field = value;
                    this.RaisePropertyChanged("address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int children {
            get {
                return this.childrenField;
            }
            set {
                if ((this.childrenField.Equals(value) != true)) {
                    this.childrenField = value;
                    this.RaisePropertyChanged("children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customer_id {
            get {
                return this.customer_idField;
            }
            set {
                if ((this.customer_idField.Equals(value) != true)) {
                    this.customer_idField = value;
                    this.RaisePropertyChanged("customer_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string degree {
            get {
                return this.degreeField;
            }
            set {
                if ((object.ReferenceEquals(this.degreeField, value) != true)) {
                    this.degreeField = value;
                    this.RaisePropertyChanged("degree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first_name {
            get {
                return this.first_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.first_nameField, value) != true)) {
                    this.first_nameField = value;
                    this.RaisePropertyChanged("first_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char gender {
            get {
                return this.genderField;
            }
            set {
                if ((this.genderField.Equals(value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hobby {
            get {
                return this.hobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.hobbyField, value) != true)) {
                    this.hobbyField = value;
                    this.RaisePropertyChanged("hobby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int income {
            get {
                return this.incomeField;
            }
            set {
                if ((this.incomeField.Equals(value) != true)) {
                    this.incomeField = value;
                    this.RaisePropertyChanged("income");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string last_name {
            get {
                return this.last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.last_nameField, value) != true)) {
                    this.last_nameField = value;
                    this.RaisePropertyChanged("last_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ownHouse {
            get {
                return this.ownHouseField;
            }
            set {
                if ((this.ownHouseField.Equals(value) != true)) {
                    this.ownHouseField = value;
                    this.RaisePropertyChanged("ownHouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int zip {
            get {
                return this.zipField;
            }
            set {
                if ((this.zipField.Equals(value) != true)) {
                    this.zipField = value;
                    this.RaisePropertyChanged("zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SLCustomer.ISLCustomer")]
    public interface ISLCustomer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLCustomer/CreateCustomer", ReplyAction="http://tempuri.org/ISLCustomer/CreateCustomerResponse")]
        void CreateCustomer(MVC3.SLCustomer.Customer users, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLCustomer/ReadCustomer", ReplyAction="http://tempuri.org/ISLCustomer/ReadCustomerResponse")]
        MVC3.SLCustomer.Customer ReadCustomer(int id, ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLCustomer/ReadCustomers", ReplyAction="http://tempuri.org/ISLCustomer/ReadCustomersResponse")]
        MVC3.SLCustomer.Customer[] ReadCustomers(ref string[] errors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISLCustomer/UpdateCustomer", ReplyAction="http://tempuri.org/ISLCustomer/UpdateCustomerResponse")]
        void UpdateCustomer(MVC3.SLCustomer.Customer customers, ref string[] errors);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISLCustomerChannel : MVC3.SLCustomer.ISLCustomer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SLCustomerClient : System.ServiceModel.ClientBase<MVC3.SLCustomer.ISLCustomer>, MVC3.SLCustomer.ISLCustomer {
        
        public SLCustomerClient() {
        }
        
        public SLCustomerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SLCustomerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLCustomerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLCustomerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateCustomer(MVC3.SLCustomer.Customer users, ref string[] errors) {
            base.Channel.CreateCustomer(users, ref errors);
        }
        
        public MVC3.SLCustomer.Customer ReadCustomer(int id, ref string[] errors) {
            return base.Channel.ReadCustomer(id, ref errors);
        }
        
        public MVC3.SLCustomer.Customer[] ReadCustomers(ref string[] errors) {
            return base.Channel.ReadCustomers(ref errors);
        }
        
        public void UpdateCustomer(MVC3.SLCustomer.Customer customers, ref string[] errors) {
            base.Channel.UpdateCustomer(customers, ref errors);
        }
    }
}
